# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import datetime,pyqtgraph as pg


class Ui_recruitment_dynam_scene(object):
    def setupUi(self, MainWindow, levels = [], speeds = [], accuracies = []):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1920, 1080)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.speed_frame = QtWidgets.QFrame(self.centralwidget)
        self.speed_frame.setGeometry(QtCore.QRect(150, 100, 790, 780))
        self.speed_frame.setStyleSheet("background-color: rgb(253, 253, 253);")
        self.speed_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.speed_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.speed_frame.setObjectName("speed_frame")
        self.speed = QtWidgets.QLabel(self.speed_frame)
        self.speed.setGeometry(QtCore.QRect(330, 10, 130, 30))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(14)
        self.speed.setFont(font)
        self.speed.setStyleSheet("color: rgb(39, 117, 117);")
        self.speed.setAlignment(QtCore.Qt.AlignCenter)
        self.speed.setObjectName("speed")

        self.speed_graph = pg.PlotWidget(self.speed_frame)
        self.speed_graph.setGeometry(QtCore.QRect(30,50, 730, 680))
        # months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        # temperature = [30, 32, 34, 32, 33, 31, 29, 32, 35, 45]
        self.speed_graph.setBackground('w')
        pen = pg.mkPen(color=(39, 117, 117))
        # month_labels = [
        #     (m, datetime.date(2020, m, 1).strftime('%B'))
        #     for m in months
        # ]
        self.speed_graph.plot([i for i,j in enumerate(levels)], speeds, pen=pen, labels=levels)
        ax = self.speed_graph.getAxis('bottom')
        ax.setTicks([levels])

        self.invisible_button = QtWidgets.QPushButton(self.centralwidget)
        self.invisible_button.setGeometry(QtCore.QRect(770, 900, 370, 60))
        self.invisible_button.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.invisible_button.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.invisible_button.setStyleSheet("QPushButton::hover{background-color : rgba(250, 250, 250, 30);}\n"
"QPushButton { background-color: rgba(10, 0, 0, 0); }\n"
"\n"
"")
        self.invisible_button.setText("")
        self.invisible_button.setObjectName("invisible_button")
        self.main_menu = QtWidgets.QLabel(self.centralwidget)
        self.main_menu.setGeometry(QtCore.QRect(770, 900, 370, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(14)
        self.main_menu.setFont(font)
        self.main_menu.setStyleSheet("color: rgb(42, 85, 126);\n"
"background-color: rgb(255, 177, 125);")
        self.main_menu.setAlignment(QtCore.Qt.AlignCenter)
        self.main_menu.setObjectName("main_menu")
        self.accuracy_frame = QtWidgets.QFrame(self.centralwidget)
        self.accuracy_frame.setGeometry(QtCore.QRect(980, 100, 790, 780))
        self.accuracy_frame.setStyleSheet("background-color: rgb(253, 253, 253);")
        self.accuracy_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.accuracy_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.accuracy_frame.setObjectName("accuracy_frame")
        self.accuracy = QtWidgets.QLabel(self.accuracy_frame)
        self.accuracy.setGeometry(QtCore.QRect(330, 10, 130, 30))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(14)
        self.accuracy.setFont(font)
        self.accuracy.setStyleSheet("color: rgb(39, 117, 117);")
        self.accuracy.setAlignment(QtCore.Qt.AlignCenter)
        self.accuracy.setObjectName("accuracy")

        self.accuracy_graph = pg.PlotWidget(self.accuracy_frame)
        self.accuracy_graph.setGeometry(QtCore.QRect(30,50, 730, 680))
        # months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        # temperature = [30, 32, 34, 32, 33, 31, 29, 32, 35, 45]
        self.accuracy_graph.setBackground('w')
        pen = pg.mkPen(color=(39, 117, 117))
        # month_labels = [
        #     (m, datetime.date(2020, m, 1).strftime('%B'))
        #     for m in months
        # ]
        self.accuracy_graph.plot([i for i,j in enumerate(levels)], accuracies, pen=pen, labels=levels)
        ax = self.accuracy_graph.getAxis('bottom')
        ax.setTicks([levels])

        self.name_frame = QtWidgets.QFrame(self.centralwidget)
        self.name_frame.setGeometry(QtCore.QRect(620, 20, 660, 67))
        self.name_frame.setStyleSheet("background-color: rgb(253, 253, 253);")
        self.name_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.name_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.name_frame.setObjectName("name_frame")
        self.dinamic = QtWidgets.QLabel(self.name_frame)
        self.dinamic.setGeometry(QtCore.QRect(200, 10, 300, 40))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(14)
        self.dinamic.setFont(font)
        self.dinamic.setStyleSheet("color: rgb(39, 117, 117);")
        self.dinamic.setAlignment(QtCore.Qt.AlignCenter)
        self.dinamic.setObjectName("dinamic")
        self.speed_frame.raise_()
        self.main_menu.raise_()
        self.invisible_button.raise_()
        self.accuracy_frame.raise_()
        self.name_frame.raise_()
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.speed.setText(_translate("MainWindow", "Скорость"))
        self.main_menu.setText(_translate("MainWindow", "На главное меню"))
        self.accuracy.setText(_translate("MainWindow", "Точность"))
        self.dinamic.setText(_translate("MainWindow", "Динамика упражнений"))
